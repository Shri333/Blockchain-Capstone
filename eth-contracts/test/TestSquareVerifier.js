// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier')
let verifier = null

contract('TestVerifier', () => {
    describe('test verification (verifyTx)', () => {
        before(async () => {
            verifier = await Verifier.deployed()
        })

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps
        it('should return true for correct proof', async () => {
            const correctProof = require('../../zokrates/code/square/proof1.json')
            assert.isTrue(await verifier.verifyTx(correctProof.proof, correctProof.inputs))
        })

        // Test verification with incorrect proof
        it('should return false for incorrect proof', async () => {
            const incorrectProof = require('../../zokrates/code/square/incorrect_proof.json')
            assert.isFalse(await verifier.verifyTx(incorrectProof.proof, incorrectProof.inputs))
        })
    })
})